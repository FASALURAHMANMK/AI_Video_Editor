{"ast":null,"code":"var _jsxFileName = \"/Users/niju/Desktop/Projects/AI_Video_Editor/client/src/components/VideoSearchForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// A simple helper to extract the YouTube video ID.\n// (You may want to improve this regex to handle more URL formats.)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction extractVideoId(url) {\n  const regex = /(?:\\?v=|\\/embed\\/|\\.be\\/)([a-zA-Z0-9_-]{11})/;\n  const match = url.match(regex);\n  return match ? match[1] : null;\n}\nfunction VideoSearchForm({\n  onFetchChunks,\n  loading\n}) {\n  _s();\n  // Holds the text in the input field\n  const [urlInput, setUrlInput] = useState('');\n  // Holds an array of added videos\n  const [videos, setVideos] = useState([]);\n\n  // Called when the user clicks the \"Add Video\" button.\n  const handleAddVideo = e => {\n    e.preventDefault();\n    if (!urlInput) return;\n\n    // Enforce a maximum of 5 videos.\n    if (videos.length >= 5) return;\n\n    // Extract the video ID. If invalid, alert the user.\n    const videoId = extractVideoId(urlInput);\n    if (!videoId) {\n      alert('Invalid YouTube URL');\n      return;\n    }\n    // Compute the thumbnail URL.\n    const thumbnailUrl = `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;\n\n    // Add the new video to the list.\n    const newVideo = {\n      url: urlInput,\n      videoId,\n      thumbnailUrl\n    };\n    setVideos([...videos, newVideo]);\n    setUrlInput('');\n  };\n\n  // Remove a video from the list (by its index)\n  const handleRemoveVideo = index => {\n    const newVideos = [...videos];\n    newVideos.splice(index, 1);\n    setVideos(newVideos);\n  };\n\n  // Called when the user clicks the \"Fetch Transcript\" button.\n  // Here we assume the onFetchChunks function can handle an array of URLs.\n  const handleFetchAll = e => {\n    e.preventDefault();\n    if (videos.length === 0) return;\n    const urls = videos.map(video => video.url);\n    onFetchChunks(urls); // <-- Updated to call the prop function\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Step 1: Paste a YouTube Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVideo,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          value: urlInput,\n          placeholder: \"e.g. https://www.youtube.com/watch?v=...\",\n          onChange: e => setUrlInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          type: \"submit\",\n          disabled: loading || !urlInput || videos.length >= 5,\n          children: \"Add Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), videos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap mt-3\",\n      children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position-relative m-2\",\n        style: {\n          width: '160px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: video.thumbnailUrl,\n          alt: \"Video Thumbnail\",\n          className: \"img-thumbnail\",\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close position-absolute\",\n          style: {\n            top: '5px',\n            right: '5px'\n          },\n          \"aria-label\": \"Remove\",\n          onClick: () => handleRemoveVideo(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"button\",\n        onClick: handleFetchAll,\n        disabled: loading || videos.length === 0,\n        children: [\"Fetch Transcript\", videos.length > 1 ? 's' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoSearchForm, \"On+Ckv6m+b3lV8iTf7PN7/nBfkk=\");\n_c = VideoSearchForm;\nexport default VideoSearchForm;\nvar _c;\n$RefreshReg$(_c, \"VideoSearchForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","extractVideoId","url","regex","match","VideoSearchForm","onFetchChunks","loading","_s","urlInput","setUrlInput","videos","setVideos","handleAddVideo","e","preventDefault","length","videoId","alert","thumbnailUrl","newVideo","handleRemoveVideo","index","newVideos","splice","handleFetchAll","urls","map","video","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","placeholder","onChange","target","disabled","style","width","src","alt","top","right","onClick","_c","$RefreshReg$"],"sources":["/Users/niju/Desktop/Projects/AI_Video_Editor/client/src/components/VideoSearchForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// A simple helper to extract the YouTube video ID.\n// (You may want to improve this regex to handle more URL formats.)\nfunction extractVideoId(url) {\n  const regex = /(?:\\?v=|\\/embed\\/|\\.be\\/)([a-zA-Z0-9_-]{11})/;\n  const match = url.match(regex);\n  return match ? match[1] : null;\n}\n\nfunction VideoSearchForm({ onFetchChunks, loading }) {\n  // Holds the text in the input field\n  const [urlInput, setUrlInput] = useState('');\n  // Holds an array of added videos\n  const [videos, setVideos] = useState([]);\n\n  // Called when the user clicks the \"Add Video\" button.\n  const handleAddVideo = (e) => {\n    e.preventDefault();\n    if (!urlInput) return;\n\n    // Enforce a maximum of 5 videos.\n    if (videos.length >= 5) return;\n\n    // Extract the video ID. If invalid, alert the user.\n    const videoId = extractVideoId(urlInput);\n    if (!videoId) {\n      alert('Invalid YouTube URL');\n      return;\n    }\n    // Compute the thumbnail URL.\n    const thumbnailUrl = `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;\n\n    // Add the new video to the list.\n    const newVideo = { url: urlInput, videoId, thumbnailUrl };\n    setVideos([...videos, newVideo]);\n    setUrlInput('');\n  };\n\n  // Remove a video from the list (by its index)\n  const handleRemoveVideo = (index) => {\n    const newVideos = [...videos];\n    newVideos.splice(index, 1);\n    setVideos(newVideos);\n  };\n\n  // Called when the user clicks the \"Fetch Transcript\" button.\n  // Here we assume the onFetchChunks function can handle an array of URLs.\n  const handleFetchAll = (e) => {\n    e.preventDefault();\n    if (videos.length === 0) return;\n    const urls = videos.map((video) => video.url);\n    onFetchChunks(urls);  // <-- Updated to call the prop function\n  };\n\n  return (\n    <div className=\"card p-3\">\n      <h3>Step 1: Paste a YouTube Link</h3>\n      <form onSubmit={handleAddVideo}>\n        <div className=\"input-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value={urlInput}\n            placeholder=\"e.g. https://www.youtube.com/watch?v=...\"\n            onChange={(e) => setUrlInput(e.target.value)}\n          />\n          <button\n            className=\"btn btn-secondary\"\n            type=\"submit\"\n            disabled={loading || !urlInput || videos.length >= 5}\n          >\n            Add Video\n          </button>\n        </div>\n      </form>\n\n      {/* Display the video thumbnails if there are any videos added */}\n      {videos.length > 0 && (\n        <div className=\"d-flex flex-wrap mt-3\">\n          {videos.map((video, index) => (\n            <div\n              key={index}\n              className=\"position-relative m-2\"\n              style={{ width: '160px' }}\n            >\n              <img\n                src={video.thumbnailUrl}\n                alt=\"Video Thumbnail\"\n                className=\"img-thumbnail\"\n                style={{ width: '100%' }}\n              />\n              <button\n                type=\"button\"\n                className=\"btn-close position-absolute\"\n                style={{ top: '5px', right: '5px' }}\n                aria-label=\"Remove\"\n                onClick={() => handleRemoveVideo(index)}\n              ></button>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* The Fetch Transcript button is now rendered below the thumbnails */}\n      <div className='mt-3'>\n      <button\n        className=\"btn btn-primary\"\n        type=\"button\"\n        onClick={handleFetchAll}\n        disabled={loading || videos.length === 0}\n      >\n        Fetch Transcript{videos.length > 1 ? 's' : ''}\n      </button>\n      </div>\n    </div>\n  );\n}\n\nexport default VideoSearchForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}